apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.mirfatif.permissionmanagerx"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 102
        versionName "v1.02"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dependenciesInfo {
        includeInApk false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(path: ':AdbLib')

    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha06'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.browser:browser:1.3.0-alpha06'
    implementation 'androidx.room:room-runtime:2.3.0-alpha03'
    annotationProcessor 'androidx.room:room-compiler:2.3.0-alpha03'

    // For SnackBar and NavigationView. Also includes CoordinatorLayout
    implementation 'com.google.android.material:material:1.3.0-alpha03'

    // to handle hyperlink onClick in TextView
    implementation 'me.saket:better-link-movement-method:2.2.0'

    // let's behave responsibly
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def sdkDir = properties.getProperty('sdk.dir')
def ndkDir = properties.getProperty('ndk.dir')

task buildDaemon(type: Exec) {
    environment 'ANDROID_SDK', sdkDir
    workingDir "${buildDir}/../.."
    commandLine './build_daemon.sh'
    doLast {
        if (execResult.getExitValue() != 0) {
            println "buildDaemon failed!"
        }
    }
}

task buildSetPriv(type: Exec) {
    environment 'ANDROID_NDK', ndkDir
    workingDir "${buildDir}/../.."
    commandLine './build_set_priv.sh'
    doLast {
        if (execResult.getExitValue() != 0) {
            println "buildSetPriv failed!"
        }
    }
}

preBuild.dependsOn(buildDaemon)
preBuild.mustRunAfter(buildDaemon)
preBuild.dependsOn(buildSetPriv)
preBuild.mustRunAfter(buildSetPriv)

apply plugin: 'com.github.sherter.google-java-format'
preBuild.dependsOn(verifyGoogleJavaFormat)
preBuild.mustRunAfter(verifyGoogleJavaFormat)
